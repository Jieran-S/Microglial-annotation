---
title: "Subclustering in DAM"
format: html
editor: source
---

# Preamble

## Dependencies

```{r load library}
suppressPackageStartupMessages({
  library(Seurat)
  library(harmony)
  library(ComplexHeatmap)
  library(dplyr)
  library(viridis)
  library(ggplot2)
})
```

## Load data

```{r load annotated object}
seu <- readRDS("../Data/Seurat_SingleCell.rds")
degs <- read.csv2("../Data/DEG_Bulk_no28.csv")
```

# DAM processing

```{r preprocessing sce}
# Subset data
seu <- seu[, seu$label_cali %in% c("DAM-I", "DAM-II")]

# Redo analysis due to subclustering
seu <- NormalizeData(seu, verbose = FALSE) %>% 
  FindVariableFeatures(nfeatures=3000) %>% ScaleData() %>% RunPCA(verbose = FALSE)

# Elbow plot to find PCs
Seurat::ElbowPlot(seu, ndims= 50) + ylab("variance explained (%)")
```

```{r integration and clusteirng}
# Define some ubi variables
PCS <- 20
VER <- FALSE

set.seed(2023)

# Harmony integration
seu <- harmony::RunHarmony(seu, group.by.vars = "orig.ident", 
                           dims.use = 1:PCS, max.iter.harmony = 50, verbose = VER)
# Clustering
seu <- FindNeighbors(seu, reduction = "harmony", dims = 1:PCS, verbose = VER)
seu <- FindClusters(seu, resolution = 0.55, verbose = VER) # used to be 0.5

# UMAP
seu <- RunUMAP(seu, reduction = "harmony", dims = 1:PCS, verbose = VER)

table(seu$seurat_clusters)
```

```{r UMAP viusalization}
# seu$seurat_clusters <- seu$seurat_clusters %>% as.integer()
DimPlot(seu, group.by = c("orig.ident", "seurat_clusters"), ncol = 2 )
```

# Visualize Heatmap

```{r marker heatmap}
# rejoin the lognorm layer
seu[["RNA"]] <- JoinLayers(seu[["RNA"]])

DoHeatmap(seu, 
          slot = "data",
          features = c("Clec7a", "Spp1", "Gpnmb", "Itgax", "Lgals3"),
          group.by = "seurat_clusters",
          angle = 0,
          vjust = 0.1,
          hjust = 0.5) + scale_fill_gradientn(colors = viridis_pal(option = "C", 
                                                                   end = 0.95, 
                                                                   direction = 1)(100))
```

# Select Clec7a positive clusters

```{r gene list of interest}
geneList <- c("Clec7a", "Spp1", "Gpnmb", "Itgax", "Lgals3")
# geneList <- c(geneList, degs$X[degs$padj <= 0.05])
geneList <- geneList[!is.na(geneList)]
```


```{r summarized heatmap}
normMtx <- LayerData(seu, "data") %>% as.matrix()

# Get a cluster-based mean of each gene expression
cluMtx <- t(normMtx) %>% as.data.frame()
cluMtx$clusters <- seu$seurat_clusters
cluMtx <- cluMtx %>%
  group_by(clusters) %>%
  summarise_all(mean) %>%
  as.data.frame() 
cluMtx <- t(cluMtx[, -1])
colnames(cluMtx) <- c(1:length(unique(seu$seurat_clusters))-1)

# Plot the target genes
ComplexHeatmap::Heatmap(cluMtx[rownames(cluMtx) %in% geneList, ],
                        column_names_rot = 0,
                        col = viridis_pal(option = "C", end = 0.95, direction = 1)(100))
```

```{r Dimplots of the feature}
geneList <- c(geneList, degs$X[degs$padj <= 0.05], "P2ry12", "Hexb")
# Use R studio preview window to adjust the size
FeaturePlot(seu, features = geneList, ncol=9, label = TRUE)
```

```{r feature plots with cutoff}
# Use R studio preview window to adjust the size
FeaturePlot(seu, features = geneList, ncol=9, label = TRUE, min.cutoff = 2)
```


From the plots above, it seems that cluster 5 and 6 are most expressed in terms 
of the marker genes mentioned.

# DEGs for Cluster 5 & 6

```{r DEG for cluster 5 and 6}
# Generate all DEG dataframes
markerFive <- Seurat::FindMarkers(seu, ident.1 = 4, logfc.threshold = 1)
markerSix <- Seurat::FindMarkers(seu, ident.1 = 6, logfc.threshold = 1)

# Select top 50 DEGs
markerList <- lapply(list(markerFive, markerSix), function(x){
  markers <- x %>%   filter(p_val_adj <= 0.05) %>%
    arrange(desc(abs(avg_log2FC))) %>%
    slice_head(n = 50)
  
  # markers <- row.names(markers)
  return(markers)
})

head(markerList[[1]], n=10)
head(markerList[[2]], n=10)
```

```{r heatmap visualization}
M <- ComplexHeatmap::Heatmap(as.matrix(normMtx[unlist(lapply(markerList, row.names)), ]),
                        show_column_names = FALSE,
                        column_split = seu$seurat_clusters,
                        row_split = factor(rep(c("4", "6"), each = 50)), 
                        col = viridis_pal(option = "C", end = 0.95, direction = 1)(100),
                        use_raster=TRUE)


DoHeatmap(seu, features = unlist(lapply(markerList, row.names)), group.by = "seurat_clusters")
```


# Epilog

```{r save data}
saveRDS(seu, "../Data/014_Seurat_DAM.rds")
# Save the DEG list for them to check
write.csv(markerList[[1]], "../Data/014_DAM_DEG_Cluster4.csv")
write.csv(markerList[[2]], "../Data/014_DAM_DEG_Cluster6.csv")
```

```{r}
sessionInfo()
```
